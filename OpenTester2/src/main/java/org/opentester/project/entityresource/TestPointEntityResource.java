package org.opentester.project.entityresource;

import java.util.List;

import org.opentester.project.HtmlGenerator;
import org.opentester.project.ProjectConfig;
import org.opentester.project.dto.KeyValueDto;
import org.opentester.project.dto.TestPointDto;
import org.opentester.project.entity.ProjectDutEntity;
import org.opentester.project.entity.ProjectTestPointEntity;
import org.opentester.project.entity.mapper.DtoMapper;
import org.opentester.project.entity.mapper.ProjectTestPointMapper;
import org.opentester.project.repository.ProjectDutRepository;
import org.opentester.project.repository.ProjectTestPointRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.jpa.repository.JpaRepository;

public class TestPointEntityResource extends AbstractEntityResource<ProjectTestPointEntity, TestPointDto, ProjectDutEntity> {

	@Autowired
	private ProjectTestPointRepository reposiroty;
	
	@Autowired
	private ProjectTestPointMapper mapper;
	
//	@Autowired
//	private HtmlGenerator<TestPointDto> generaotr;
	
	@Autowired
	private ProjectDutRepository parentRepository;
	
	@Override
	protected DtoMapper<ProjectTestPointEntity, TestPointDto> getMapper() {
		return mapper;
	}

//	@Override
//	protected HtmlGenerator<TestPointDto> getGenerator() {
//		return generaotr;
//	}

	@Override
	protected List<ProjectTestPointEntity> findByParent(Long parent) {
		return reposiroty.findByDut_id(parent);
	}

	@Override
	public String getType() {
		return ProjectConfig.testPoint;
	}

	@Override
	protected ProjectDutEntity findParentById(Long parent) {
		return parentRepository.findById(parent).get();
	}

	@Override
	protected void setParent(Long parent, TestPointDto dto, ProjectDutEntity parentEntity) {
		dto.setDut(KeyValueDto.builder().key(parent).build());
	}

	@Override
	protected TestPointDto getDefaultDto() {
		return TestPointDto.builder().build();
	}

	@Override
	protected JpaRepository<ProjectTestPointEntity, Long> getRepository() {
		return reposiroty;
	}

}
