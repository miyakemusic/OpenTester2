package org.opentester.project.entityresource.trash;

import org.opentester.project.ProjectConfig;
import org.opentester.project.dto.KeyValueDto;
import org.opentester.project.dto.TestPointDto;
import org.opentester.project.entity.DutEntity;
import org.opentester.project.entity.TestPointEntity;
import org.opentester.project.entity.mapper.DtoMapper;
import org.opentester.project.entity.mapper.TestPointMapper;
import org.opentester.project.entityresource.AbstractEntityResource;
import org.opentester.project.repository.DutRepository;
import org.opentester.project.repository.TestPointRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.jpa.repository.JpaRepository;

public class TestPointEntityResource extends AbstractEntityResource<TestPointEntity, TestPointDto, DutEntity> {

	@Autowired
	private TestPointRepository reposiroty;
	
	@Autowired
	private TestPointMapper mapper;
	
	@Autowired
	private DutRepository parentRepository;
	
	@Override
	protected DtoMapper<TestPointEntity, TestPointDto> getMapper() {
		return mapper;
	}

	@Override
	public String getType() {
		return ProjectConfig.testPoint;
	}

	@Override
	protected void setParent(TestPointDto dto, DutEntity parentEntity) {
		dto.setDut(KeyValueDto.builder().key(parentEntity.getId()).value(parentEntity.toString()).build());
	}

	@Override
	protected TestPointDto getDefaultDto() {
		return TestPointDto.builder().build();
	}

	@Override
	protected JpaRepository<TestPointEntity, Long> getRepository() {
		return reposiroty;
	}

	@Override
	protected JpaRepository<DutEntity, Long> getParentRepository() {
		return parentRepository;
	}

}
