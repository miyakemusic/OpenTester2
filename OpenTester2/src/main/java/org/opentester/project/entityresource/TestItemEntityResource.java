package org.opentester.project.entityresource;

import java.util.List;

import org.opentester.project.HtmlGenerator;
import org.opentester.project.ProjectConfig;
import org.opentester.project.dto.KeyValueDto;
import org.opentester.project.dto.TestItemDto;
import org.opentester.project.entity.ProjectTestItemEntity;
import org.opentester.project.entity.ProjectTestPointEntity;
import org.opentester.project.entity.mapper.DtoMapper;
import org.opentester.project.entity.mapper.ProjectTestItemMapper;
import org.opentester.project.repository.ProjectTestItemRepository;
import org.opentester.project.repository.ProjectTestPointRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.jpa.repository.JpaRepository;

public class TestItemEntityResource extends AbstractEntityResource<ProjectTestItemEntity, TestItemDto, ProjectTestPointEntity> {

	@Autowired
	private ProjectTestItemRepository projectTestItemRepository;
	
	@Autowired
	private ProjectTestItemMapper projectTestItemMapper;
	
	@Autowired
	private HtmlGenerator<TestItemDto>	htmlGenerator;
	
	@Autowired
	private ProjectTestPointRepository testPointRepository;

	@Override
	protected DtoMapper<ProjectTestItemEntity, TestItemDto> getMapper() {
		return projectTestItemMapper;
	}

	@Override
	protected HtmlGenerator<TestItemDto> getGenerator() {
		return htmlGenerator;
	}

	@Override
	protected List<ProjectTestItemEntity> findByParent(Long parent) {
		return projectTestItemRepository.findByTestPoint_id(parent);
	}

	@Override
	public String getType() {
		return ProjectConfig.testItem;
	}

	@Override
	protected ProjectTestPointEntity findParentById(Long parent) {
		return testPointRepository.findById(parent).get();
	}

	@Override
	protected void setParent(Long parent, TestItemDto dto, ProjectTestPointEntity parentEntity) {
		dto.setTestPoint(KeyValueDto.builder().key(parentEntity.getId()).build());
	}

	@Override
	protected TestItemDto getDefaultDto() {
		return TestItemDto.builder().build();
	}

	@Override
	protected String getId(ProjectTestItemEntity e) {
		return e.getId().toString();
	}

	@Override
	protected JpaRepository<ProjectTestItemEntity, Long> getRepository() {
		return projectTestItemRepository;
	}

}
