package org.opentester.project.entityresource.trash;

import org.opentester.project.ProjectConfig;
import org.opentester.project.dto.KeyValueDto;
import org.opentester.project.dto.DutDto;
import org.opentester.project.entity.DutEntity;
import org.opentester.project.entity.DutPackageEntity;
import org.opentester.project.entity.mapper.DtoMapper;
import org.opentester.project.entity.mapper.DutMapper;
import org.opentester.project.entityresource.AbstractEntityResource;
import org.opentester.project.repository.DutPackageRepository;
import org.opentester.project.repository.DutRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.jpa.repository.JpaRepository;

public class DutEntityResource extends AbstractEntityResource<DutEntity, DutDto, DutPackageEntity> {

	@Autowired
	private DutRepository repository;
	
	@Autowired
	private DutMapper mapper;
	
	@Autowired
	private DutPackageRepository parentRepository;

	@Override
	protected DtoMapper<DutEntity, DutDto> getMapper() {
		return mapper;
	}

	@Override
	public String getType() {
		return ProjectConfig.dut;
	}

	@Override
	protected DutDto getDefaultDto() {
		return DutDto.builder().build();
	}

	@Override
	protected JpaRepository<DutEntity, Long> getRepository() {
		return repository;
	}

	@Override
	protected void setParent(DutDto dto, DutPackageEntity parentEntity) {
		dto.setDutPackage(KeyValueDto.builder().key(parentEntity.getId()).value(parentEntity.toString()).build());
	}

	@Override
	protected JpaRepository<DutPackageEntity, Long> getParentRepository() {
		return parentRepository;
	}

}
