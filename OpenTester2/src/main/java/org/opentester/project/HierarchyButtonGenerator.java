package org.opentester.project;

import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;

public class HierarchyButtonGenerator {

	@Autowired
	private TypeResourceManager typeResourceManager;
	
	public String generate(String type, Long id) {
		
		try {
		List<NameValue> hierarchy = new ArrayList<>();
		if (type != null) {
			List<String> hierachyString = typeResourceManager.hierarchy(type);

			Object object = typeResourceManager.get(type).getRepository().findById(id).get();

			hierarchy.add(NameValue.builder()
					.id((Long)object.getClass().getDeclaredMethod("getId").invoke(object))
					.type(type)
					.childType(typeResourceManager.childType(type))
					.text(object.toString())
					.build());

			
			Long pid = id;
			for (int i = hierachyString.size()-1; i > 0; i--) {
				String t = hierachyString.get(i);
				Object parentObject = typeResourceManager.get(t).getParentEntity(pid);
				pid = (Long)parentObject.getClass().getDeclaredMethod("getId").invoke(parentObject);
				String pt = hierachyString.get(i-1);
				
				hierarchy.add(NameValue.builder()
						.id(pid)
						.type(pt)
						.childType(t)
						.text(parentObject.toString()).build());
				
				
			}
			Collections.reverse(hierarchy);
			
		}
		
		String str = "";
		for (int i = 0; i < hierarchy.size(); i++) {
			NameValue currentNode = hierarchy.get(i);

			String htmlClass = "";
			if (i < hierarchy.size()-1) {
				htmlClass = "btn btn-outline-secondary btn-sm";
			}
			else {
				htmlClass = "btn btn-outline-primary btn-sm";
			}
			//String url = ProjectConfig.tableURL + currentNode.getChildType();
			//url += "/" + currentNode.getType() + "_" + currentNode.getId();
			//String url = "/admin/project_node/'" + "+getPresentationType()+'/" + currentNode.getType() + "/" + currentNode.getId();
			String url = "/admin/project_node/{pt}/" + currentNode.getType() + "/" + currentNode.getId();
			str += "-> <button class=\"" + htmlClass + "\" onclick=\"changeProjectMainPane('" + url + "')\">" + createHierarchyText(currentNode) + "</button>";

		}
		return str;
		} catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException
				| NoSuchMethodException | SecurityException e) {
			e.printStackTrace();
		}
		return "";
	}
	
	private String createHierarchyText(NameValue nv) {
		return nv.getText().length() < 20 ? nv.getText() : nv.getText().substring(0, 20) + "..";
	}
}
