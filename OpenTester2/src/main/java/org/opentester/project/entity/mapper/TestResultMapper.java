package org.opentester.project.entity.mapper;

import org.opentester.project.dto.KeyValueDto;
import org.opentester.project.dto.TestResultDto;
import org.opentester.project.entity.PassFailCalculator;
import org.opentester.project.entity.TestResultEntity;
import org.opentester.project.repository.RawDataRepository;
import org.opentester.project.repository.TestItemRepository;
import org.opentester.project.repository.TestResultRepository;
import org.opentester.project.repository.TesterRepository;
import org.opentester.project.repository.ProjectUserRepository;
import org.springframework.beans.factory.annotation.Autowired;

public class TestResultMapper extends DtoMapper<TestResultEntity, TestResultDto> {
	
	@Autowired
	private DateMapper dateMapper;
	
	@Override
	public TestResultDto toDto(TestResultEntity e) {
		return TestResultDto.builder()
				.id(e.getId())
				.result(e.getResult())
				.testItem(isNotNull(e.getTestItem()) ? KeyValueDto.builder().key(e.getTestItem().getId()).value(e.getTestItem().toString()).build() : null)
				.operator(isNotNull(e.getOperator()) ? KeyValueDto.builder().key(e.getOperator().getId()).value(e.getOperator().toString()).build() : null)
				.tester(isNotNull(e.getTester()) ? KeyValueDto.builder().key(e.getTester().getId()).value(e.getTester().toString()).build() : null)
//				.rawData(isNotNull(e.getRawData()) ? KeyValueDto.builder().key(e.getRawData().getId()).value(e.getRawData().toString()).build() : null)			
				.date(dateMapper.toString(e.getDate()))
				.status(e.getStatus())
				.build();
	}

	@Autowired
	private TestItemRepository projectTestItemRepository;

	@Autowired
	private ProjectUserRepository projectUserRepository;

	@Autowired
	private TesterRepository projectTesterRepository;

	@Autowired
	private RawDataRepository projectRawDataRepository;

	
	@Override
	public TestResultEntity toEntity(TestResultDto d) {
		return TestResultEntity.builder()
				.id(d.getId())
				.result(d.getResult())
				.testItem(isNotNull(d.getTestItem()) ? projectTestItemRepository.findById(d.getTestItem().getKey()).get(): null)
				.operator(isNotNull(d.getOperator()) ? projectUserRepository.findById(d.getOperator().getKey()).get(): null)
				.tester (isNotNull(d.getTester()) ? projectTesterRepository.findById(d.getTester().getKey()).get(): null)
				.rawData(isNotNull(d.getRawData()) ? projectRawDataRepository.findById(d.getRawData().getKey()).get(): null)
				.date(dateMapper.toDate(d.getDate()))
				.build();
	}

}
