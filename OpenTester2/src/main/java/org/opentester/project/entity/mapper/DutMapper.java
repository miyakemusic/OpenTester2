package org.opentester.project.entity.mapper;

import java.util.ArrayList;
import java.util.Objects;
import java.util.stream.Collectors;

import org.opentester.project.dto.DutDto;
import org.opentester.project.dto.DutPackageDto;
import org.opentester.project.dto.KeyValueDto;
import org.opentester.project.entity.DutEntity;
import org.opentester.project.entity.DutPackageEntity;
import org.opentester.project.repository.DutPackageRepository;
import org.springframework.beans.factory.annotation.Autowired;

public class DutMapper extends DtoMapper <DutEntity, DutDto>{

	@Autowired
	private DutPackageRepository projectDutPackageRepository;
	
	@Autowired
	private DateMapper dateMapper;
	
	@Override
	public DutDto toDto(DutEntity e) {
		return DutDto.builder()
			.id(e.getId())
			.name(e.getName())
			.passFail(e.passFail())
			.completeDueDate(dateMapper.toString(e.completeDueDate()))
			.completeDate(dateMapper.toString(e.completeDate()))
			.location(new ArrayList<String>(e.allLocations()))
			.status(new ProgressStatusGenerator().generate(e.completeDueDate(), e.completeDate(), e.passFail()))
			.operator(e.allOperators().stream().filter(o -> Objects.nonNull(o)).map(o -> o.toString()).collect(Collectors.toList()))
			.dutPackage(isNotNull(e.getDutPackage()) ? KeyValueDto.builder().key(e.getDutPackage().getId()).value(e.getDutPackage().toString()).build() : null)
			.build();
	}

	@Override
	public DutEntity toEntity(DutDto d) {
		return DutEntity.builder()	
				.id(d.getId())
				.name(d.getName())
				.dutPackage(isNotNull(d.getDutPackage()) ? projectDutPackageRepository.findById(d.getDutPackage().getKey()).get()  : null)
				.build();
	}

}
