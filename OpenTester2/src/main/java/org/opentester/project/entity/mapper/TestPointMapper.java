package org.opentester.project.entity.mapper;

import org.opentester.project.dto.KeyValueDto;
import org.opentester.project.dto.TestPointDto;
import org.opentester.project.entity.TestPointEntity;
import org.opentester.project.repository.DutRepository;
import org.opentester.project.repository.ProjectUserRepository;
import org.springframework.beans.factory.annotation.Autowired;

public class TestPointMapper extends DtoMapper<TestPointEntity, TestPointDto> {

	@Autowired
	private ProjectUserRepository projectUserRepository;
	
	@Autowired
	private DutRepository projectDutRepository;
	
	@Autowired
	private DateMapper dateMapper;
	
	@Override
	public TestPointDto toDto(TestPointEntity e) {
		return TestPointDto.builder()
				.id(e.getId())
				.name(e.getName())
				.location(e.getLocation())
				.operator(isNotNull(e.getOperator()) ? KeyValueDto.builder().key(e.getOperator().getId()).value(e.getOperator().toString()).build() : null)
				.dut(isNotNull(e.getDut()) ? KeyValueDto.builder().key(e.getDut().getId()).value(e.getDut().toString()).build() : null)
				.completeDate(dateMapper.toString(e.completeDate()))
				.completeDueDate(dateMapper.toString(e.completeDueDate()))
				.status(new ProgressStatusGenerator().generate(e.completeDueDate(), e.completeDate(), e.passFail()))
				.passFailProgress(e.passFail())
				.build();
	}

	@Override
	public TestPointEntity toEntity(TestPointDto d) {
		return TestPointEntity.builder()
				.id(d.getId())
				.name(d.getName())
				.location(d.getLocation())
				.operator(isNotNull(d.getOperator())? projectUserRepository.findById(d.getOperator().getKey()).get() : null)
				.dut(isNotNull(d.getDut())? projectDutRepository.findById(d.getDut().getKey()).get(): null)
				.build();
	}

}
