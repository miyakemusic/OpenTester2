package org.opentester.project.entity.mapper;

import org.opentester.project.dto.KeyValueDto;
import org.opentester.project.dto.ProjectTesterDto;
import org.opentester.project.entity.ProjectTesterEntity;
import org.opentester.project.repository.ProjectTesterTemplateRepository;
import org.opentester.project.repository.ProjectUserRepository;
import org.springframework.beans.factory.annotation.Autowired;

public class ProjectTesterMapper extends DtoMapper <ProjectTesterEntity, ProjectTesterDto> {

	@Autowired
	private ProjectUserRepository projectUserRepository;
	
	@Autowired
	private ProjectTesterTemplateRepository projectTesterTemplateRepository;
	
	@Override
	public ProjectTesterDto toDto(ProjectTesterEntity e) {
		return ProjectTesterDto.builder()
				.id(e.getId())
				.currentUser(isNotNull(e.getCurrentUser()) ? KeyValueDto.builder().key(e.getCurrentUser().getId()).value(e.getCurrentUser().getUsername()).build() : null)
				.model(isNotNull(e.getTesterTemplate()) ? KeyValueDto.builder().key(e.getTesterTemplate().getId()).value(e.getTesterTemplate().getModel()).build() : null)
				.serialNumber(e.getSerialNumber())
				.status(e.getStatus())
				.build();
	}

	@Override
	public ProjectTesterEntity toEntity(ProjectTesterDto d) {
		return ProjectTesterEntity.builder()
				.id(d.getId())
				.currentUser(isNotNull(d.getCurrentUser()) ? projectUserRepository.findById(d.getCurrentUser().getKey()).get() : null)
				.testerTemplate(isNotNull(d.getModel()) ? projectTesterTemplateRepository.findById(d.getModel().getKey()).get() : null)
				.serialNumber(d.getSerialNumber())
				.build();
	}

}
