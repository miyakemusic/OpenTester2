package org.opentester.project.entity.mapper;

import java.util.List;

import org.opentester.project.dto.ProjectDto;
import org.opentester.project.entity.PassFail;
import org.opentester.project.entity.ProjectEntity;

public class ProjectMapper extends DtoMapper<ProjectEntity, ProjectDto>{

	@Override
	public ProjectDto toDto(ProjectEntity entity) {
//		Set<ProjectUserEntity> operators = entity.allOperators();
//		String operator = convertOperatorText(operators);
		PassFail passFail = entity.passFail();
//		String status = createStatus(passFail);
		
		ProjectDto dto = ProjectDto.builder()
				.id(entity.getId())				
				.name(entity.getProjectName())
				.type(entity.getType())
				//.completeDueDate(formatDate(p.completeDueDate()))
				.completeDueDate(entity.completeDueDate())
				//.completeDate(formatDate(p.completeData()))
				.completeDate(entity.completeData())
//				.status(entity.)
//				.operator(entity.allOperators().stream().map(o -> KeyValueDto.builder().key(o.getId().valueOf(o.getUsername()).build())).collect(Collectors.toList())
				.location(entity.allLocations().toString())
				.passed(passFail.getPassed())
				.failed(passFail.getFailed())
				.untouched(passFail.getUntouched())
				.build();
		return dto;
	}

	@Override
	public ProjectEntity toEntity(ProjectDto dto) {
		return ProjectEntity.builder()
		.id(dto.getId())
		.projectName(dto.getName())
		.type(dto.getType())
		.build();
	}

}
