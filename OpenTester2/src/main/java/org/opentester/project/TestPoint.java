package org.opentester.project;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import lombok.Builder;
import lombok.Data;
import lombok.experimental.Tolerate;

@Data
@Builder
public class TestPoint {

	private int id;
	
	private String name;
	private String location;
	private String operator;
	private List<TestItem> testItems = new ArrayList<>();
	
	@Tolerate
	public TestPoint() {}
//	private List<TestResult> testResults = new ArrayList<>();
	
//	public TestPoint testItem(String testItem, String criteria) {
//		this.testItems.add(TestItem.builder().testTarget(testItem).criteria(criteria).build());
//		return this;
//	}
	
	public Set<ProjectUser> allOperators() {
		Set<ProjectUser> ret = new HashSet<>();
		this.testItems.forEach(t -> ret.addAll(t.allOperators()));
		return ret;
	}

	public PassFail passFail() {
		PassFail ret = new PassFail(0, 0, 0);
		this.testItems.forEach(f -> {
			ret.add(f.passFail());
		});
		return ret;
	}

	public Date completeDueDate() {
		LatestDate latest = new LatestDate();
		for (TestItem testItem :this.testItems) {
			Date date = testItem.getCompleteDueDate();
			latest.add(date);
		}
		return latest.latest();
	}

}
