package org.opentester.project.dto;

import java.util.List;

import org.opentester.project.ProjectConfig;
import org.opentester.project.dto.DtoFieldControl.WidgetType;
import org.opentester.project.dto.DtoSelect.Type;

import lombok.Builder;
import lombok.Data;
import lombok.experimental.Tolerate;

@Data
@Builder
@DtoRest(uri="/api/project/admin/" + TestItemDto.type)
public class TestItemDto {
	public static final String type = ProjectConfig.testItem;
	
	@Tolerate
	public TestItemDto() {}
	private Long id;
//	private String base;
//	private String description;
//	private String key;
//	private String unit;
	
	@DtoSelect(type=Type.Retrieve, uri="/api/project/admin/select_html/" + ProjectConfig.testPoint)
	private KeyValueDto testPoint;
	
	@DtoSelect(type=Type.Retrieve, uri="/api/project/admin/select_html/" + ProjectConfig.criteriaTemplate)
	private KeyValueDto criteria;
	private String status;
	
	@DtoSelect(type=Type.Retrieve, uri="/api/project/admin/select_html/" + ProjectConfig.user)
	private KeyValueDto operator;
	
	//@DtoFieldControl(type=WidgetType.MOVE, uri=ProjectConfig.tableURL + ProjectConfig.result + "/{*type*}_{id}")
	//@DtoSelect(type=Type.Retrieve, uri="/api/project/admin/select_html/" + ProjectConfig.result)
	@DtoFieldControl(type=WidgetType.READONLY)
	//private List<KeyValueDto> results;
	private String result;
	
//	private PassFailDto passFailProgress;
	
	private String completeDueDate;
	private String completeDate;
//	private String result;
//	private String tester;
//	private Long rawData = -1L;
	//private String rawDataName;
//	private String history;
}
