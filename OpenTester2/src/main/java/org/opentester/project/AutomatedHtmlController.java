package org.opentester.project;

import java.security.Principal;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import org.modelmapper.ModelMapper;
import org.opentester.project.dto.ProjectSubRoleDto;
import org.opentester.project.dto.ProjectTestItemTemplateDto;
import org.opentester.project.dto.ProjectTesterDto;
import org.opentester.project.dto.ProjectTesterTemplateDto;
import org.opentester.project.dto.ProjectUserDto;
import org.opentester.project.dto.TesterSupplierDto;
import org.opentester.project.entity.DtoConverter;
import org.opentester.project.entity.ProjectSubRoleEntity;
import org.opentester.project.entity.ProjectTestItemTemplateEntity;
import org.opentester.project.entity.ProjectTesterEntity;
import org.opentester.project.entity.ProjectTesterSupplierEntity;
import org.opentester.project.entity.ProjectTesterTemplateEntity;
import org.opentester.project.entity.ProjectUserEntity;
import org.opentester.project.entity.mapper.ProjectMapper;
import org.opentester.project.entity.mapper.ProjectSubRoleMapper;
import org.opentester.project.entity.mapper.ProjectTestItemTemplateMapper;
import org.opentester.project.entity.mapper.ProjectTesterMapper;
import org.opentester.project.entity.mapper.ProjectTesterSupplierMapper;
import org.opentester.project.entity.mapper.ProjectTesterTemplateMapper;
import org.opentester.project.entity.mapper.ProjectUserMapper;
import org.opentester.project.repository.ProjectTestItemTemplateRepository;
import org.opentester.project.repository.ProjectTesterRepository;
import org.opentester.project.repository.ProjectTesterSupplierRepository;
import org.opentester.project.repository.ProjectTesterTemplateRepository;
import org.opentester.project.repository.ProjectUserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class AutomatedHtmlController {
	@Autowired
	private ProjectTesterSupplierRepository projectTesterSupplierRepository;

	@Autowired
	private ProjectTesterTemplateRepository projectTesterTemplateRepository;

	@Autowired
	private ProjectTestItemTemplateRepository projectTestItemTemplateRepository;

	@Autowired
	private ProjectTesterRepository projectTesterRepository;
	
	@Autowired
	private ProjectUserRepository projectUserRepository;
	
	@Autowired
	private ProjectSubRoleRepository projectSubRoleRepository;
	
	@Autowired
	private EntityResourceManager entityResourceManager;
	
	@Autowired 
	private ProjectMapper projectMapper;
	
	@Autowired 
	private ProjectUserMapper projectUserMapper;
	
	@Autowired 
	private ProjectTesterSupplierMapper projectTesterSupplierMapper;
	
	@Autowired 
	private ProjectTesterTemplateMapper projectTesterTemplateMapper;
	
	@Autowired 
	private ProjectTestItemTemplateMapper projectTestItemTemplateMapper;
	
	@Autowired 
	private ProjectTesterMapper projectTesterMapper;
	
	@Autowired
	private ProjectSubRoleMapper projectSubRoleMapper;
	
	@GetMapping("/admin/project_table_html/{type}")
	public String project_table_html(Model model, Principal principal, @PathVariable("type") String type) {
		return entityResourceManager.getTable(type);
	}
	
	@GetMapping("/admin/project_fields_html/{type}/{id}")
	public String project_dialog_html(Model model, Principal principal, @PathVariable("type") String type, @PathVariable(value = "id") Long id) {
		return entityResourceManager.getDialogHtml(type, id);
	}
	
	@DeleteMapping("/admin/project_fields_html/{type}/{id}")
	public String project_dialog_html_del(Model model, Principal principal, @PathVariable("type") String type, @PathVariable(value = "id") Long id) {
		entityResourceManager.delete(type, id);
		return "OK";
	}
	
	@GetMapping("/admin/project_fields_html/{type}")
	public String project_dialog_html(Model model, Principal principal, @PathVariable("type") String type) {
		return entityResourceManager.getDialogHtml(type, null);
	}
	
	@GetMapping("/api/project/admin/single_select_html/{type}")
	public String single_select_html(Model model, Principal principal, @PathVariable("type") String type) {
		return entityResourceManager.getSingleSelectionHtml(type);
	}
	
	@GetMapping("/api/project/admin/multi_select_html/{type}")
	public String multi_select_html(Model model, Principal principal, @PathVariable("type") String type) {
		return entityResourceManager.getMultiSelectionHtml(type);
	}
	
	@PostMapping("/api/project/admin/testerSupplier")
	public String supplier(Principal principal, @RequestBody TesterSupplierDto dto) {
		this.projectTesterSupplierRepository.save(projectTesterSupplierMapper.toEntity(dto));
		return "OK";
	}
	
	@PostMapping("/api/project/admin/testerTemplate")
	public String testerTemplate(Principal principal, @RequestBody ProjectTesterTemplateDto dto) {
		this.projectTesterTemplateRepository.save(projectTesterTemplateMapper.toEntity(dto));
		return "OK";
	}
	
	@PostMapping("/api/project/admin/testItemTemplate")
	public String testItemTemplate(Principal principal, @RequestBody ProjectTestItemTemplateDto dto) {
		this.projectTestItemTemplateRepository.save(projectTestItemTemplateMapper.toEntity(dto));
		return "OK";
	}
	
	@PostMapping("/api/project/admin/tester")
	public String tester(Principal principal, @RequestBody ProjectTesterDto dto) {
		this.projectTesterRepository.save(projectTesterMapper.toEntity(dto));
		return "OK";
	}	
	
	@PostMapping("/api/project/admin/user")
	public String user(Principal principal, @RequestBody ProjectUserDto dto) {
		this.projectUserRepository.save(projectUserMapper.toEntity(dto));
		return "OK";
	}	
	
	@PostMapping("/api/project/admin/subRole")
	public String subRole(Principal principal, @RequestBody ProjectSubRoleDto dto) {
		this.projectSubRoleRepository.save(this.projectSubRoleMapper.toEntity(dto));
		return "OK";
	}	
}
