package org.opentester.project;

import java.security.Principal;
import java.util.List;
import java.util.Map;

import org.opentester.project.dto.TesterSupplierDto;
import org.opentester.project.entity.DtoConverter;
import org.opentester.project.entity.ProjectTesterSupplierEntity;
import org.opentester.project.repository.ProjectTesterSupplierRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class AutomatedHtmlController {
	@Autowired
	private ProjectTesterSupplierRepository projectTesterSupplierRepository;

	@Autowired
	private EntityResourceManager entityResourceManager;
	
	@GetMapping("/admin/project_table_html/{type}")
	public String project_table_html(Model model, Principal principal, @PathVariable("type") String type) {
		return entityResourceManager.getTable(type);
	}
	
	@GetMapping("/admin/project_dialog_html/{type}/{id}")
	public String project_dialog_html(Model model, Principal principal, @PathVariable("type") String type, @PathVariable(value = "id") Long id) {
		return entityResourceManager.getDialogHtml(type, id);
	}
	
	@GetMapping("/admin/project_dialog_html/{type}")
	public String project_dialog_html(Model model, Principal principal, @PathVariable("type") String type) {
		return entityResourceManager.getDialogHtml(type, null);
	}
	
	@PostMapping("/api/project/admin/testerSupplier")
	public String supplier(Principal principal, @RequestBody TesterSupplierDto dto) {
		this.projectTesterSupplierRepository.save(ProjectTesterSupplierEntity.builder()
				.id(dto.getId())
				.name(dto.getName())
				.url(dto.getUrl())
				.build());
		return "OK";
	}
}
