package org.opentester.project;

import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;

import org.apache.commons.lang3.StringUtils;
import org.opentester.project.entity.ParentNode;
import org.opentester.project.entity.mapper.DtoMapper;
import org.springframework.data.jpa.repository.JpaRepository;

import lombok.Builder;
import lombok.Getter;

@Getter
public class TypeResource<T1, T2> {
	
	public TypeResource(JpaRepository rep, DtoMapper map, Class<?> clazz) {
		this.repository = rep;
		this.mapper = map;
		this.clazz = clazz;
	}
	
	private JpaRepository<T1, Long> repository;
	private DtoMapper<T1, T2> mapper;
	private Class<?> clazz;
	public Object getParentEntity(Long id) {
		T1 o = this.repository.findById(id).get();
		for (Field field : o.getClass().getDeclaredFields()) {
			if (field.getAnnotation(ParentNode.class) != null) {
				try {
					return o.getClass().getMethod("get" + StringUtils.capitalize(field.getName())).invoke(o);
				} catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException
						| NoSuchMethodException | SecurityException e) {
					e.printStackTrace();
				}
			}
		}
		return null;
	}
	public T2 getDto(Long id) {
		return this.mapper.toDto(this.repository.findById(id).get());
	}
}
