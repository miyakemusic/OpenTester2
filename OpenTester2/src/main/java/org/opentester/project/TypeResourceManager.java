package org.opentester.project;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public abstract class TypeResourceManager {
	private Map<String, TypeResource> map = new HashMap<>();
	private List<String> link = new ArrayList<>();
	public TypeResource get(String type) {
		if (map.size() == 0) {
			createMap(map);
			
			createLink(link);
		}
		return map.get(type);
	}

	abstract void createMap(Map<String, TypeResource> map2);
	abstract void createLink(List<String> link);

	public String parentType(String type) {
		int index = this.link.indexOf(type);
		if (index >= 1) {
			return link.get(index - 1);
		}
		return "";
	}

	public List<String> hierarchy(String type) {
		int index = link.indexOf(type)+1;
		if (index >= this.link.size()) {
			index = this.link.size()-1;
		}
		return link.subList(0, index);
	}

	public String childType(String parentType) {
		return link.get(link.indexOf(parentType) + 1);
	}
}
