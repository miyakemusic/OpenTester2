package org.opentester.job.project;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;

import lombok.Builder;
import lombok.Data;

@Data
@Builder
public class Project {

	private String projectName;
	private String type;
	private String status;
	private Date startDate;
	private Date completeDueDate;
	private Date completeDate;
	private String location;
	
//	private List<ProjectNode> subProjects = new ArrayList<>();
	private List<Dut> duts = new ArrayList<>();

	public static List<Project> testdata() {
		List<TestItem> testItemsMarunouchi = Arrays.asList(
				TestItem.builder().testTarget("FIBER.TOTAL_LENGTH").criteria("MIN=20.00km; MAX=20.01km").build(),
				TestItem.builder().testTarget("FIBER.TOTAL_LOSS").criteria("MAX=10.00dB").build(),
				TestItem.builder().testTarget("FIBER.MACROBEND_COUNT").criteria("MAX=0").build(),
				TestItem.builder().testTarget("FIBER.ENDFACE.SCRATCH_COUNT").criteria("MAX=0").build(),
				TestItem.builder().testTarget("FIBER.ENDFACE.DEFECT_COUNT").criteria("MAX=0").build(),
				TestItem.builder().testTarget("RX.POWER").criteria("MIN=-40dBm").build()
				);
		TestPoint testPointCable001Fiber001_Marunouchi = TestPoint.builder().name("@CABLE#001@FIBER#001@MARUNOUCHI").testItems(testItemsMarunouchi).build();
		
		List<TestItem> testItemsMachida = Arrays.asList(
				TestItem.builder().testTarget("FIBER.TOTAL_LENGTH").criteria("MIN=20.00km; MAX=20.01km").build(),
				TestItem.builder().testTarget("FIBER.TOTAL_LOSS").criteria("MAX=10.00dB").build(),
				TestItem.builder().testTarget("FIBER.MACROBEND_COUNT").criteria("MAX=0").build(),
				TestItem.builder().testTarget("FIBER_ENDFACE.SCRATCH_COUNT").criteria("MAX=0").build(),
				TestItem.builder().testTarget("FIBER_ENDFACE.DEFECT_COUNT").criteria("MAX=0").build(),
				TestItem.builder().testTarget("RX.POWER").criteria("MIN=-40dBm").build()
				);
		TestPoint testPointCable001Fiber001_Machida = TestPoint.builder().name("@CABLE#001@FIBER#001@MACHIDA").testItems(testItemsMachida).build();

		Dut dutCable001Fiber001 = Dut.builder().dutName("CABLE#001FIBER#001").testPoints(
				Arrays.asList(testPointCable001Fiber001_Marunouchi, testPointCable001Fiber001_Machida)).build();

		
//		ProjectNode subProject1 = ProjectNode.builder().subProjectName("TPDR001@MARUNOURI_ROAMD102@MACCHIDA").duts(
//				Arrays.asList(dutCable001Fiber001)).build();//.project("DCI_Marunouchi0012_Mchida1203").subProject("TPDR001@MARUNOURI_ROAMD102@MACCHIDA");

		Project projectConstruction = Project.builder().projectName("New building construction at MARUNOURI, MACCHIDA").type("CONSTRUCTION").location("Marunouchi, Machida")
				.duts(Arrays.asList(dutCable001Fiber001))
				.build();
		
		Project projectConstruction2 = Project.builder().projectName("new building construction at SHINBASHI, SHINJUKU and YOKOHAMA").type("CONSTRUCTION").location("Shinbashi, Shinjuku, Yokohama")
				.duts(Arrays.asList(dutCable001Fiber001))
				.build();			
		
		Project projectRepair = Project.builder().projectName("UENO_SHIBUYA").type("REPAIR").location("Ueno, Shibuya")
				.duts(Arrays.asList(dutCable001Fiber001))
				.build();	
		
		List<Project> ret = new ArrayList<>();
		ret.add(projectConstruction);
		ret.add(projectConstruction2);
		ret.add(projectRepair);
		return ret;
	}

}
